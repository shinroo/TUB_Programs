#
#  Makefile for common
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -c ../omnetppconfig -I../common
#

# Name of target to be created (-o option)
TARGET = common

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../common

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with (wildcard needed to prevent "no such file *.o" errors)
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS= ../common/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../omnetppconfig
include ../omnetppconfig

MSGCOPTS= $(INCLUDE_PATH)

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= Application_n.o NetworkStack_n.o  Application.o DummyApplication.o ExternalApplication.o NetworkStack.o protsim_defines.o

# header files generated (from msg files)
GENERATEDHEADERS= 

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) Makefile .tstamp
	@# do nothing

.tstamp: $(OBJS)
	echo>.tstamp

$(OBJS) : $(GENERATEDHEADERS)


purify: $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS) Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo
	@echo Error: $@ does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo
	@exit 1

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

Application_n.o: Application_n.cc
	$(CXX) -c $(NEDCOPTS) Application_n.cc

Application_n.cc: Application.ned
	$(NEDC) $(INCLUDE_PATH) Application.ned

NetworkStack_n.o: NetworkStack_n.cc
	$(CXX) -c $(NEDCOPTS) NetworkStack_n.cc

NetworkStack_n.cc: NetworkStack.ned
	$(NEDC) $(INCLUDE_PATH) NetworkStack.ned

Application.o: Application.cc
	$(CXX) -c $(COPTS) Application.cc

DummyApplication.o: DummyApplication.cc
	$(CXX) -c $(COPTS) DummyApplication.cc

ExternalApplication.o: ExternalApplication.cc
	$(CXX) -c $(COPTS) ExternalApplication.cc

NetworkStack.o: NetworkStack.cc
	$(CXX) -c $(COPTS) NetworkStack.cc

protsim_defines.o: protsim_defines.cc
	$(CXX) -c $(COPTS) protsim_defines.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) generateheaders) || exit 1; done

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h .tstamp
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) depend) || exit 1; done

makefiles:
	# recreate Makefile
	opp_makemake -f  -n -c ../omnetppconfig -I../common 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefiles) || exit 1; done

makefile-ins:
	# recreate Makefile.in
	opp_makemake -f -m  -n -c ../omnetppconfig -I../common 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefile-ins) || exit 1; done

# "re-makemake" and "re-makemake-m" are deprecated, historic names of the above two targets
re-makemake: makefiles
re-makemake-m: makefile-ins


# DO NOT DELETE THIS LINE -- make depend depends on it.
Application.o: Application.cc \
  Application.h \
  NetworkStack.h \
  protsim_defines.h \
  ../support/ForwardingTable.h \
  ../support/MetricFunc.h \
  ../emulation/ProtSimSocketRTScheduler.h \
  ../common/protsim_defines.h
DummyApplication.o: DummyApplication.cc \
  protsim_defines.h \
  Application.h \
  NetworkStack.h \
  ../support/ForwardingTable.h \
  ../support/MetricFunc.h \
  ../emulation/ProtSimSocketRTScheduler.h \
  ../common/protsim_defines.h
ExternalApplication.o: ExternalApplication.cc \
  ExternalApplication.h \
  Application.h \
  NetworkStack.h \
  ../emulation/ProtSimSocketRTScheduler.h \
  protsim_defines.h \
  ../support/ForwardingTable.h \
  ../support/MetricFunc.h \
  ../common/protsim_defines.h
NetworkStack.o: NetworkStack.cc \
  NetworkStack.h \
  ExternalApplication.h \
  ../support/Parser.h \
  protsim_defines.h \
  ../support/ForwardingTable.h \
  ../support/MetricFunc.h \
  ../emulation/ProtSimSocketRTScheduler.h \
  ../common/protsim_defines.h \
  Application.h
protsim_defines.o: protsim_defines.cc \
  protsim_defines.h
