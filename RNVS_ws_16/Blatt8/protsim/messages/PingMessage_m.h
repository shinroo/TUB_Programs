//
// Generated file, do not edit! Created by opp_msgc 3.3 from PingMessage.msg.
//

#ifndef _PINGMESSAGE_M_H_
#define _PINGMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0303
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{ ... }} section:

#include "NetworkPacket_m.h"
// end cplusplus


/**
 * Class generated from <tt>PingMessage.msg</tt> by opp_msgc.
 * <pre>
 * message PingMessage extends NetworkPacket
 * {
 *     fields:
 * 	long       seqNo = -1;
 * 	bool       reply = false;
 * }
 * </pre>
 */
class PingMessage : public NetworkPacket
{
  protected:
    long seqNo_var;
    bool reply_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PingMessage&);

  public:
    PingMessage(const char *name=NULL, int kind=0);
    PingMessage(const PingMessage& other);
    virtual ~PingMessage();
    PingMessage& operator=(const PingMessage& other);
    virtual cPolymorphic *dup() const {return new PingMessage(*this);}
    virtual void netPack(cCommBuffer *b);
    virtual void netUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getSeqNo() const;
    virtual void setSeqNo(long seqNo_var);
    virtual bool getReply() const;
    virtual void setReply(bool reply_var);
};

inline void doPacking(cCommBuffer *b, PingMessage& obj) {obj.netPack(b);}
inline void doUnpacking(cCommBuffer *b, PingMessage& obj) {obj.netUnpack(b);}

#endif // _PINGMESSAGE_M_H_
