//
// Generated file, do not edit! Created by opp_msgc 3.3 from ARQMessage.msg.
//

#ifndef _ARQMESSAGE_M_H_
#define _ARQMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0303
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{ ... }} section:

#include "NetworkPacket_m.h"
// end cplusplus


/**
 * Class generated from <tt>ARQMessage.msg</tt> by opp_msgc.
 * <pre>
 * message ARQData extends NetworkPacket
 * {
 *     fields:
 * 	long       seqNo = -1;
 * }
 * </pre>
 */
class ARQData : public NetworkPacket
{
  protected:
    long seqNo_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ARQData&);

  public:
    ARQData(const char *name=NULL, int kind=0);
    ARQData(const ARQData& other);
    virtual ~ARQData();
    ARQData& operator=(const ARQData& other);
    virtual cPolymorphic *dup() const {return new ARQData(*this);}
    virtual void netPack(cCommBuffer *b);
    virtual void netUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getSeqNo() const;
    virtual void setSeqNo(long seqNo_var);
};

inline void doPacking(cCommBuffer *b, ARQData& obj) {obj.netPack(b);}
inline void doUnpacking(cCommBuffer *b, ARQData& obj) {obj.netUnpack(b);}

/**
 * Class generated from <tt>ARQMessage.msg</tt> by opp_msgc.
 * <pre>
 * message ARQAck extends NetworkPacket
 * {
 *     fields:
 * 	long       seqNoExpected = -1;
 * }
 * </pre>
 */
class ARQAck : public NetworkPacket
{
  protected:
    long seqNoExpected_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ARQAck&);

  public:
    ARQAck(const char *name=NULL, int kind=0);
    ARQAck(const ARQAck& other);
    virtual ~ARQAck();
    ARQAck& operator=(const ARQAck& other);
    virtual cPolymorphic *dup() const {return new ARQAck(*this);}
    virtual void netPack(cCommBuffer *b);
    virtual void netUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getSeqNoExpected() const;
    virtual void setSeqNoExpected(long seqNoExpected_var);
};

inline void doPacking(cCommBuffer *b, ARQAck& obj) {obj.netPack(b);}
inline void doUnpacking(cCommBuffer *b, ARQAck& obj) {obj.netUnpack(b);}

#endif // _ARQMESSAGE_M_H_
